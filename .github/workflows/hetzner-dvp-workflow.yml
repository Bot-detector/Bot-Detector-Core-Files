name: hetzner development workflow

# Controls when the workflow will run
# https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ develop ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions: write-all


env:
  VALUE_FILE: bd-core-dvp/deployment.yaml
  REGISTRY: quay.io/bot_detector/bd-core-files


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build_image:
    # The type of runner that the job will run on
    runs-on: [self-hosted, hetzner]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: git checkout
        uses: actions/checkout@v3

      - name: Set vars
        id: vars
        run: |
          echo "GIT_HASH=$(git rev-parse --short "$GITHUB_SHA")" >> $GITHUB_OUTPUT

      - name: Docker Build
        run: |
          docker build . --file Dockerfile --network=host -t "${{ env.REGISTRY }}:${{ steps.vars.outputs.GIT_HASH }}" --target production --build-arg api_port=5000 --build-arg root_path=""
        working-directory: /path/to/your/dockerfile/directory

      - name: Login to Quay registry
        run: echo "${{ secrets.QUAY_REGISTRY_PASSWORD }}" | docker login -u "bot_detector+quay_robot" quay.io --password-stdin

      - name: Tag image
        run: |
          docker tag "${{ env.REGISTRY }}:${{ steps.vars.outputs.GIT_HASH }}" "${{ env.REGISTRY }}:dev"
          docker tag "${{ env.REGISTRY }}:${{ steps.vars.outputs.GIT_HASH }}" "${{ env.REGISTRY }}:latest"

      - name: Docker Push image to Quay registry
        run: |
          docker push "${{ env.REGISTRY }}:${{ steps.vars.outputs.GIT_HASH  }}"
          docker push "${{ env.REGISTRY }}:dev"
          docker push "${{ env.REGISTRY }}:latest"

      - name: Checkout Target Repository
        uses: actions/checkout@v3
        with:
          repository: Bot-detector/bot-detector-k8s

      - name: Update Image Version
        uses: fjogeleit/yaml-update-action@main
        with:
          repository: Bot-detector/bot-detector-k8s
          valueFile: "${{ env.VALUE_FILE }}"
          token: ${{ secrets.HETZNER_ACTIONS_RUNNER_TOKEN }}
          commitChange: true
          branch: "${{ env.VALUE_FILE }}-${{ steps.vars.outputs.GIT_HASH }}"
          targetBranch: develop
          masterBranchName: develop
          createPR: true
          changes: |
            {
              "spec.template.spec.containers[0].image":"${{ steps.vars.outputs.REGISTRY }}:${{ steps.vars.outputs.GIT_HASH }}"
            }
