name: hetzner development workflow

# Controls when the workflow will run
# https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows
on:
  # Triggers the workflow on push events but only for the "develop" branch
  push:
    branches:
      - develop

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  VALUE_FILE: bd-core-dvp/deployment.yaml
  REGISTRY: quay.io/bot_detector/bd-core-files
  ENVIRONMENT: dvp

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains two jobs: build_image and update_image_version
  build_image:
    # The type of runner that the job will run on
    runs-on: [self-hosted, "hetzner"]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: git checkout
        uses: actions/checkout@v3

      - name: Set vars
        id: vars
        run: |
          echo "GIT_HASH=$(git rev-parse --short "$GITHUB_SHA")" >> $GITHUB_OUTPUT

      - name: Docker Build
        run: |
          docker build . --file Dockerfile --network=host -t "${REGISTRY}:${{ steps.vars.outputs.GIT_HASH }}" --target production --build-arg api_port=5000 --build-arg root_path=""

      - name: Login to Quay registry
        run: echo "${{ secrets.QUAY_REGISTRY_PASSWORD }}" | docker login -u "bot_detector+quay_robot" quay.io --password-stdin

      - name: Tag image
        run: |
          docker tag "${{ steps.vars.outputs.GIT_HASH }}" "${REGISTRY}:${ENVIRONMENT}"

      - name: Docker Push image to Quay registry
        run: |
          docker push "${REGISTRY}:${{ steps.vars.outputs.GIT_HASH }}"
          docker push "${REGISTRY}:${ENVIRONMENT}"

  update_image_version:
    runs-on: [self-hosted, "hetzner"]
    needs: build_image # This ensures that the build_image job is completed before running this job

    steps:
      - name: Checkout Target Repository
        uses: actions/checkout@v3
        with:
          repository: Bot-detector/bot-detector-k8s

      - name: Set vars
        id: vars
        run: |
          echo "GIT_HASH=$(git rev-parse --short "$GITHUB_SHA")" >> $GITHUB_OUTPUT

      - name: Update Image Version
        uses: fjogeleit/yaml-update-action@main
        with:
          repository: Bot-detector/bot-detector-k8s
          valueFile: "${VALUE_FILE}"
          token: "${{ secrets.HETZNER_ACTIONS_RUNNER_TOKEN }}"
          commitChange: true
          title: "${VALUE_FILE}-${{ steps.vars.outputs.GIT_HASH }}"
          branch: "${VALUE_FILE}-${{ steps.vars.outputs.GIT_HASH }}"
          targetBranch: develop
          masterBranchName: develop
          createPR: true
          changes: |
            {
              "spec.template.spec.containers[0].image": "${REGISTRY}:${{ steps.vars.outputs.GIT_HASH }}"
            }
